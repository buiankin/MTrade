
import org.gradle.internal.os.OperatingSystem

plugins {
    id 'com.android.application'
}


android {

    signingConfigs {
        config {
            keyAlias 'androiddebugkey'
            switch (OperatingSystem.current()) {
                case OperatingSystem.LINUX:
                    storeFile file('/home/denis/Android/mykeys/debug.keystore')
                    break
                case OperatingSystem.WINDOWS:
                    storeFile file('c:/Android/workspace/keys/debug.keystore')
                    break
            }
            keyPassword 'android'
            storePassword 'android'
        }
        release
    }

    bundle {
        storeArchive {
            enable = false
        }
    }

    compileSdkVersion 33

    defaultConfig {
        applicationId "ru.code22.mtrade"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 400
        versionName "4.00"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk{
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        vectorDrawables {
            useSupportLibrary = true
        }
        android.ndkVersion '21.0.6113669'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.config
            debuggable true
        }
    }


    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['lib/armeabi-v7a/libmain.so', 'lib/mips/libmain.so', 'lib/x86/libmain.so']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    ndkVersion '25.0.8775105'
    buildToolsVersion '33.0.0'
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace 'ru.code22.mtrade'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //implementation 'com.androidessence:recyclerviewcursoradapter:1.0.0'

    implementation 'commons-net:commons-net:3.8.0'

    //implementation 'com.github.TellH:RecyclerTreeView:1.2.0'

    //implementation files('libs/commons-net-3.6.jar')
    //implementation files('libs/jheader-0.1.jar')
    //implementation files('libs/ksoap2-android-assembly-3.3.0-jar-with-dependencies.jar')
    //implementation files('libs/universal-image-loader-1.9.5.jar')
    // чуть не воспользовался WildcardFileFilter от апача из commons.io, но там минимальные требования api 24
    // поэтому ставим версию 2.6 (я ее скопировал в lib)
    //implementation "commons-io:commons-io:2.7"
    // add SDKs for desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-iid:21.1.0'
    implementation 'com.google.firebase:firebase-messaging:23.1.2'

    //implementation platform("com.google.firebase:firebase-bom:28.4.1")
    //implementation "com.google.firebase:firebase-analytics"
    //implementation "com.google.firebase:firebase-database"

    //implementation 'android.arch.work:work-runtime:1.0.1'
    implementation 'androidx.work:work-runtime:2.8.1'
    implementation 'androidx.preference:preference:1.2.0'

    // хотя пока не используется
    implementation 'androidx.exifinterface:exifinterface:1.3.6'

    implementation 'com.squareup.picasso:picasso:2.71828'
    //implementation 'org.jetbrains:annotations-java5:15.0'

    implementation 'com.google.android.play:core:1.10.3'

    implementation 'com.google.gms:google-services:4.3.15'

    //implementation "androidx.concurrent:concurrent-futures:1.1.0"
    implementation 'com.google.guava:guava:31.1-jre'
    //implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'

    //testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'



}

// Add a file signing.properties
File propFile = file('signing.properties')
if (propFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}

configurations {
    all {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains' , module:'annotations'
}