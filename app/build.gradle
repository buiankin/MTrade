
import org.gradle.internal.os.OperatingSystem

plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    alias(libs.plugins.compose.compiler)
}

android {

    signingConfigs {
        config {
            keyAlias 'androiddebugkey'
            switch (OperatingSystem.current()) {
                case OperatingSystem.LINUX:
                    storeFile file('/home/denis/Android/mykeys/debug.keystore')
                    break
                case OperatingSystem.WINDOWS:
                    storeFile file('c:/Android/workspace/keys/debug.keystore')
                    break
            }
            keyPassword 'android'
            storePassword 'android'
        }
        release
    }

    bundle {
        storeArchive {
            enable = false
        }
    }

    defaultConfig {
        applicationId "ru.code22.mtrade"
        minSdkVersion 24
        targetSdkVersion 35
        compileSdk 35
        versionCode 3109
        versionName "3.109"
        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk{
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        vectorDrawables {
            useSupportLibrary = true
        }
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.config
            debuggable true
        }

    }


    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
    packagingOptions {
        jniLibs {
            // Это для того, чтобы совместимость с 16Кб ELF игнорировать, но это не работает
            useLegacyPackaging true
            pickFirsts += ['lib/armeabi-v7a/libmain.so', 'lib/mips/libmain.so', 'lib/x86/libmain.so']
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    ndkVersion '29.0.13113456 rc1'
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace 'ru.code22.mtrade'
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.fragment

    implementation libs.multidex

    implementation libs.commons.net
    implementation libs.commons.io

    //implementation 'com.github.TellH:RecyclerTreeView:1.2.0'

    //implementation files('libs/commons-net-3.6.jar')
    //implementation files('libs/jheader-0.1.jar')
    //implementation files('libs/ksoap2-android-assembly-3.3.0-jar-with-dependencies.jar')
    //implementation files('libs/universal-image-loader-1.9.5.jar')
    // чуть не воспользовался WildcardFileFilter от апача из commons.io, но там минимальные требования api 24
    // поэтому ставим версию 2.6 (я ее скопировал в lib)
    //implementation "commons-io:commons-io:2.7"

    //implementation 'android.arch.work:work-runtime:1.0.1'
    implementation libs.androidx.work.runtime
    implementation libs.androidx.preference

    // хотя пока не используется
    implementation libs.androidx.exifinterface

    implementation 'com.squareup.picasso:picasso:2.71828'
    //implementation 'org.jetbrains:annotations-java5:15.0'

    //implementation 'com.google.android.play:core:1.10.3'
    implementation libs.app.update

    implementation libs.ksoap2.android

    //implementation "androidx.concurrent:concurrent-futures:1.1.0"
    implementation libs.guava

    implementation libs.okhttp

    implementation libs.androidx.core.ktx.v1150
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.material3
    implementation libs.androidx.ui.tooling.preview.android

    implementation(libs.androidx.datastore.preferences)
    implementation(libs.androidx.data.store.core)


    coreLibraryDesugaring libs.desugar.jdk.libs

    //testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'



}

// Add a file signing.properties
File propFile = file('signing.properties')
if (propFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}

configurations {
    all {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains' , module:'annotations'
}